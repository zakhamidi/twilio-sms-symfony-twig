<?php

namespace ContainerPBxPVm6;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMessenger_Retry_SendFailedMessageForRetryListenerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'messenger.retry.send_failed_message_for_retry_listener' shared service.
     *
     * @return \Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'messenger'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'SendFailedMessageForRetryListener.php';

        return $container->privates['messenger.retry.send_failed_message_for_retry_listener'] = new \Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener(($container->privates['.service_locator.rCNnWz1'] ?? $container->load('get_ServiceLocator_RCNnWz1Service')), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'async_priority_high' => ['privates', 'messenger.retry.multiplier_retry_strategy.async_priority_high', 'getMessenger_Retry_MultiplierRetryStrategy_AsyncPriorityHighService', true],
            'async_priority_low' => ['privates', 'messenger.retry.multiplier_retry_strategy.async_priority_low', 'getMessenger_Retry_MultiplierRetryStrategy_AsyncPriorityLowService', true],
        ], [
            'async_priority_high' => '?',
            'async_priority_low' => '?',
        ]), ($container->privates['logger'] ?? ($container->privates['logger'] = new \Symfony\Component\HttpKernel\Log\Logger())), ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService()));
    }
}
